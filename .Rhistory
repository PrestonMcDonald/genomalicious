gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
look <- 'classic'
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top')
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black')
, legend.position='top')
}
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold', size=14))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold', size=12))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold', size=11))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold', size=10))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold', size=11))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=16)
, legend.position='top')
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
gg
dat
dat[, MISS:=as.logical(RESP)]
dat
dat[, MISS:=as.integer(!is.na(RESP))]
dat
summary(dat)
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ geom_tile())
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ geom_tile(aes(fill=MISS)))
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ geom_tile(aes(fill=as.factor(MISS)) ))
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(axis.ticks=element_blank())
+ geom_tile(aes(fill=as.factor(MISS)) ))
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
+ geom_tile(aes(fill=as.factor(MISS)) )
+
)
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
plotColour <- c('white', 'royalblue')
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
+ geom_tile(aes(fill=as.factor(MISS)) )
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
+ geom_tile(aes(fill=as.factor(MISS)), colour='black')
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
#' Plot missing data, by samples
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.15*nrow(dat), replace=FALSE)
, 100:250)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
plotColour <- c()
stats <- FALSE
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
#' Plot missing data, by samples
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.15*nrow(dat), replace=FALSE)
, 100:250)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
plotColour <- c()
stats <- FALSE
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
if(type=='hist'){
if(is.na(popCol)){
stats <- dat[, sum(is.na(RESP)), by=SAMPLE]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples'))
} else{
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
}
# Heat map
# https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/
if(type=='heatmap'){
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
}
}
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
plotColour <- c('white', 'royalblue')
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
length(unique(dat$SAMPLE))
missIdx <- c(sample(1:nrow(dat), size=0.15*nrow(dat), replace=FALSE)
, 100:500, 800:1200)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
#' Plot missing data, by samples
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.15*nrow(dat), replace=FALSE)
, 100:500, 800:1200)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
plotColour <- c()
stats <- FALSE
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
if(type=='hist'){
if(is.na(popCol)){
stats <- dat[, sum(is.na(RESP)), by=SAMPLE]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples'))
} else{
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP))
}
# Heat map
# https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/
if(type=='heatmap'){
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
}
}
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
dat
plotColour
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
plotColour <- 'white'
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
dim(dat)
#' Plot missing data, by samples
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.1*nrow(dat), replace=FALSE)
, 100:500, 800:1200, 200000:200100)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
missIdx <- c(sample(1:nrow(dat), size=0.1*nrow(dat), replace=FALSE)
, 100:500, 800:1200, 8000:8888, 200000:200500)
dat$GT[missIdx] <- NA
#' Plot missing data, by samples
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.1*nrow(dat), replace=FALSE)
, 100:500, 800:1200, 8000:8888, 200000:200500)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
stats <- FALSE
############## plot_missingBYsamples <- function(){}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
if(length(plotColour)==1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
(ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
gg <- gg + facet_wrap(~ POP)
gg
dat
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ facet_wrap(~ POP)
)
gg
