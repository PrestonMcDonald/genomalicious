gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
)
return(gg)
})
dim(ggLs)
str(ggLs)
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
############## plot_missingBYsamples <- function(){}
for(lib in c('ggplot2', 'data.table','gridExtra')){ require(lib, character.only = TRUE)}
grid.arrange(ggLs)
do.call('grid.arrange', c(ggLs, ncol=2))
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus')
)
gg
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
#' Plot missing data, by samples
#'
#'
#'
data("genomalicious_4pops")
dat <- genomalicious_4pops
missIdx <- c(sample(1:nrow(dat), size=0.05*nrow(dat), replace=FALSE)
, 100:500, 800:1200, 8000:8888, 200000:200500)
dat$GT[missIdx] <- NA
type <- 'hist'
look <- 'ggplot'
sampCol <- 'SAMPLE'
respCol <- 'GT'
locusCol <- 'LOCUS'
popCol <- 'POP'
plotColour <- 'white'
stats <- FALSE
############## plot_missingBYsamples <- function(){}
for(lib in c('ggplot2', 'data.table','gridExtra')){ require(lib, character.only = TRUE)}
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
dat[, MISS:=as.integer(!is.na(RESP))]
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
dat[, MISS:=as.integer(!is.na(RESP))]
dat
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
dat[, MISS:=as.integer(!is.na(RESP))]
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus')
)
# Heat map
# https://learnr.wordpress.com/2010/01/26/ggplot2-quick-heatmap-plotting/
if(type=='heatmap'){
if(length(plotColour)<=1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus')
)
if(is.na(popCol)==FALSE){
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
}
}
if(length(plotColour)<=1){
plotColour <- c('white', 'royalblue')
}
dat[, MISS:=as.integer(!is.na(RESP))]
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus')
)
gg
ggLs <- lapply(unique(dat$POP), function(pop){
gg <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(gg)
})
do.call('grid.arrange', c(ggLs, ncol=2))
x <- do.call('grid.arrange', c(ggLs, ncol=2))
x
plot(x)
uniqPops <- unique(dat$POP)
uniqPops
length(uniqPops)/2
plotnCol <- 2
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP, ncol=plotnCol))
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP, ncol=plotnCol))
gg
plotNCol <- 4
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColour[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP, ncol=plotNCol))
gg
ggLs <- lapply(unique(dat$POP), function(pop){
g <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColour[1], '1'=plotColour[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(g)
})
gg <- do.call('grid.arrange', c(ggLs, ncol=plotNCol))
gg
libs <- c('devtools', 'roxygen2', 'testthat', 'knitr')
for(L in libs){require(L, character.only=T)}
roxygenise('./', clean=TRUE)
roxygenise('./', clean=TRUE)
plot_missBYsamps <- function(dat, type='hist', look='ggplot'
, sampCol='SAMPLE', locusCol='LOCUS'
, respCol='GT', popCol='POP'
, plotColours='white', plotNCol=2){
# --------------------------------------------+
# Libraries, assertions, and setup
# --------------------------------------------+
for(lib in c('ggplot2', 'data.table','gridExtra')){ require(lib, character.only = TRUE)}
# Rename columns
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
# Rename the population column, if it was specified
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
# --------------------------------------------+
# Code
# --------------------------------------------+
# Histogram
if(type=='hist'){
# If
if(is.na(popCol)){
# If no population column is specified (NA)
stats <- dat[, sum(is.na(RESP)), by=SAMPLE]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme
+ geom_histogram(fill=plotColours[1], colour='black')
+ labs(x='Missing data', y='Number of samples'))
} else{
# If population column is specified, facet plot by population
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColours[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP, ncol=plotNCol))
}
}
# Heat map
if(type=='heatmap'){
# Make two colours, if only ine specified
if(length(plotColours)<=1){
plotColours <- c('white', 'royalblue')
}
# Assign a new column to record missing data
dat[, MISS:=as.integer(!is.na(RESP))]
if(is.na(popCol)){
# If no population column is specified (NA)
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColours[1], '1'=plotColours[2]))
+ labs(x='Samples', y='Locus')
)
} else {
# If population column is specified, make indiviudal plot
# for each population
ggLs <- lapply(unique(dat$POP), function(pop){
g <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColours[1], '1'=plotColours[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(g)
})
gg <- do.call('grid.arrange', c(ggLs, ncol=plotNCol))
}
}
# FInish up
plot(gg)
return(gg)
}
data("genomalicious_4pops")
plot_missBYsamps(genomalicious_4pops, type='heatmap')
plot_missBYsamps <- function(dat, type='hist', look='ggplot'
, sampCol='SAMPLE', locusCol='LOCUS'
, respCol='GT', popCol=NA
, plotColours='white', plotNCol=2){
# --------------------------------------------+
# Libraries, assertions, and setup
# --------------------------------------------+
for(lib in c('ggplot2', 'data.table','gridExtra')){ require(lib, character.only = TRUE)}
# Rename columns
colnames(dat)[
match(c(locusCol, respCol, sampCol), colnames(dat))
] <- c('LOCUS', 'RESP', 'SAMPLE')
# Rename the population column, if it was specified
if(is.na(popCol)==FALSE){
colnames(dat)[which(colnames(dat)==popCol)] <- 'POP'
}
# Set the plot theme by look
if(look=='ggplot'){
plotTheme <- theme_gray() + theme(legend.position='top'
, text=element_text(size=12))
} else if(look=='classic'){
plotTheme <- theme_bw() + theme(panel.grid.major=element_blank()
, panel.grid.minor=element_blank()
, text=element_text(colour='black', size=12)
, legend.position='top')
}
# --------------------------------------------+
# Code
# --------------------------------------------+
# Histogram
if(type=='hist'){
# If
if(is.na(popCol)){
# If no population column is specified (NA)
stats <- dat[, sum(is.na(RESP)), by=SAMPLE]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme
+ geom_histogram(fill=plotColours[1], colour='black')
+ labs(x='Missing data', y='Number of samples'))
} else{
# If population column is specified, facet plot by population
stats <- dat[, sum(is.na(RESP)), by=c('SAMPLE', 'POP')]
gg <- (ggplot(stats, aes(x=V1))
+ plotTheme + theme(strip.text.x=element_text(face='bold'))
+ geom_histogram(fill=plotColours[1], colour='black')
+ labs(x='Missing data', y='Number of samples')
+ facet_wrap(~ POP, ncol=plotNCol))
}
}
# Heat map
if(type=='heatmap'){
# Make two colours, if only ine specified
if(length(plotColours)<=1){
plotColours <- c('white', 'royalblue')
}
# Assign a new column to record missing data
dat[, MISS:=as.integer(!is.na(RESP))]
if(is.na(popCol)){
# If no population column is specified (NA)
gg <- (ggplot(dat, aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColours[1], '1'=plotColours[2]))
+ labs(x='Samples', y='Locus')
)
} else {
# If population column is specified, make indiviudal plot
# for each population
ggLs <- lapply(unique(dat$POP), function(pop){
g <- (ggplot(dat[POP==pop], aes(x=SAMPLE, y=LOCUS))
+ theme(
axis.text.x = element_blank()
,axis.text.y = element_blank()
,axis.ticks = element_blank()
,panel.border=element_rect(fill=NA, colour='black')
,plot.title=element_text(hjust=0.5, size=12, face='bold')
,legend.position='none'
)
+ geom_tile(aes(fill=as.factor(MISS)), colour=NA)
+ scale_fill_manual(values=c('0'=plotColours[1], '1'=plotColours[2]))
+ labs(x='Samples', y='Locus', title=pop)
)
return(g)
})
gg <- do.call('grid.arrange', c(ggLs, ncol=plotNCol))
}
}
# FInish up
plot(gg)
return(gg)
}
plot_missBYsamps(genomalicious_4pops, type='heatmap')
roxygenise('./', clean=TRUE)
library(genomalicious)
