.[, .(FREQ.OBS=sum(GT)/(length(GT)*2)), by=LOCUS]
) %>%
.[, c('FREQ.OBS','FREQ.SIM')]
left_join(
simFamily[, .(FREQ.SIM=sum(GT)/(length(GT)*2)), by=LOCUS],
rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
.[, .(FREQ.OBS=sum(GT)/(length(GT)*2)), by=LOCUS]
) %>%
.[, c('FREQ.OBS','FREQ.SIM')] %>%
plot
abline(0,1)
family_sim_data(freqData=freqsPop1, 20)
family_sim_data(freqData=freqsPop1, numSims=20)
family_sim_data(freqData=freqsPop1, numSims=20) %>%
.[grep('G3_1',SAMPLE)]
family_sim_data(freqData=freqsPop1, numSims=20) %>%
.[grep('G3.1',SAMPLE)]
family_sim_data(freqData=freqsPop1, numSims=20) %>%
.[grep('G3.1',SAMPLE) | grep('G3.2',SAMPLE)]
family_sim_data(freqData=freqsPop1, numSims=20)
sibs <- family_sim_data(freqData=freqsPop1, numSims=20)
sibs[grep('G3.1',SAMPLE)]
sibs[grep('G3.2',SAMPLE)]
sibs[grep('G3.1',SAMPLE)]
sibs[grep('G3.2',SAMPLE)]
rbind(
genosPop1,
sibs[grep('G3.1',SAMPLE)],
sibs[grep('G3.2',SAMPLE)]
)
rbind(
genosPop1,
sibs[grep('G3.1',SAMPLE), c('SAMPLE','LOCUS','GT')],
sibs[grep('G3.2',SAMPLE), c('SAMPLE','LOCUS','GT')]
)
# Simulate 100 families
simFamily <- family_sim_data(
freqData=freqsPop1,
locusCol='LOCUS',
freqCol='FREQ',
numSims=100
)
rbind(
genosPop1,
sibs[grep('G3.1',SAMPLE), c('SAMPLE','LOCUS','GT')],
sibs[grep('G3.2',SAMPLE), c('SAMPLE','LOCUS','GT')]
)
rbind(
genosPop1,
sibs[grep('G3.1',SAMPLE), c('SAMPLE','LOCUS','GT')],
sibs[grep('G3.2',SAMPLE), c('SAMPLE','LOCUS','GT')]
) %>%
DT2Mat_genos()
View(obsGenoMat)
obsGenosMat <- rbind(
genosPop1,
sibs[grep('G3.1',SAMPLE), c('SAMPLE','LOCUS','GT')],
sibs[grep('G3.2',SAMPLE), c('SAMPLE','LOCUS','GT')]
) %>%
DT2Mat_genos()
obsGRM <- Gmatrix(obsGenosMat, method='Yang', ploidy=2)
obsGRM
simGenosMat <- DT2Mat_genos(simFamily)
simGRM <- Gmatrix(simGenosMat, method='Yang', ploidy=2)
relComp <- family_sim_compare(
simFamily=simFamily,
simGRM=simGRM,
obsGRM=obsGRM
)
# The data
relComp$data
relComp$plot
relComp$data
relComp$data[is.na(SIM)]
relComp$data[is.na(SIM)]$RELATE
relComp$data[is.na(SIM)]$RELATE
relComp$data[is.na(SIM)]$RELATE %>% summary
sampsPop1 <- unique(genosPop1$SAMPLE)
sampsPop1
parents <- sample(sampsPop1, size=2, replace=FALSE)
parents
genosPop1[SAMPLE==parent[1]]
genosPop1[SAMPLE==parents[1]]
genosPop1[SAMPLE==parents[1], rbinom(1,1,GT/2), by=LOCUS]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GT)), by=LOCUS]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS]
parents
parents
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('OS', parents, sep='.'))
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, sep='.'))
lapply(1:10, function(sim){
parents <- sample(sampsPop1, size=2, replace=FALSE)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, sep='.'))
})
lapply(1:10, function(sim){
parents <- sample(sampsPop1, size=2, replace=FALSE)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, sep='.'))
}) %>%
do.call('rbind', .)
genosSibs <- lapply(1:10, function(sim){
parents <- sample(sampsPop1, size=2, replace=FALSE)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, sep='.'))
}) %>%
do.call('rbind', .)
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
genosSibs
rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')])
rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, sep='.'), .)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste('Child', parents, collapse='.'), .)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste0('Child', '.', paste(parents, collapse='.')), .)
genosSibs <- lapply(1:10, function(sim){
parents <- sample(sampsPop1, size=2, replace=FALSE)
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, .(GT=sum(GAMETE)), by=LOCUS] %>%
data.table(
SAMPLE=paste0('Child', '.', paste(parents, collapse='.')), .)
}) %>%
do.call('rbind', .)
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
obsGRM <- Gmatrix(obsGenosMat, method='Yang', ploidy=2)
obsGRM
obsGRM %>% dim
simGenosMat <- DT2Mat_genos(simFamily)
simGRM <- Gmatrix(simGenosMat, method='Yang', ploidy=2)
relComp <- family_sim_compare(
simFamily=simFamily,
simGRM=simGRM,
obsGRM=obsGRM
)
relComp$data
relComp$data
relComp$plot
freqsPop1
parents
sub('Ind1_', '', parents)
child <- paste0('Child_', sub('Ind1_', '', parents))
child
child <- paste(sub('Ind1_', '', parents), collapse='.')
child
child <- paste(sub('Ind1_', '', parents), collapse='.')
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(1,1,GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:.N, by=LOCUS]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:.N, by=LOCUS] %>%
print
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')]
genosPop1[SAMPLE %in% parents] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS] %>%
print
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2
gamete2
gamete1
gamete1
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2)
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste('Child_',child,'_',sib)] %>% print
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste('Child_',child,'_',SIB)] %>% print
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
genosSibs <- lapply(1:2, function(i){
parents <- sample(sampsPop1, size=2, replace=FALSE)
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
sampsPop1 <- unique(genosPop1$SAMPLE)
genosSibs <- lapply(1:2, function(i){
parents <- sample(sampsPop1, size=2, replace=FALSE)
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
obsGenosMat
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
obsGRM <- Gmatrix(obsGenosMat, method='Yang', ploidy=2)
simGenosMat <- DT2Mat_genos(simFamily)
# Calculate the GRM
simGRM <- Gmatrix(simGenosMat, method='Yang', ploidy=2)
### COMPARE THE OBSERVED AND SIMULATED
relComp <- family_sim_compare(
simFamily=simFamily,
simGRM=simGRM,
obsGRM=obsGRM
)
relComp$data
relComp$plot
relComp$data
parentList <- list(c('Ind1_1','Ind1_2'), c('Ind1_29','Ind1_30'))
parentList <- list(c('Ind1_1','Ind1_2'), c('Ind1_29','Ind1_30'))
genosSibs <- lapply(1:2, function(i){
parents <- parentList[[i]]
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
parentList <- list(c('Ind1_1','Ind1_2'), c('Ind1_29','Ind1_30'))
genosSibs <- lapply(1:2, function(i){
parents <- parentList[[i]]
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
library(AGHmatrix)
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
# Calculate the GRM
obsGRM <- Gmatrix(obsGenosMat, method='Yang', ploidy=2)
### THE SIMULATED GENETIC RELATIONSHIPS MATRIX
# Convert simulated families into a genotype matrix
simGenosMat <- DT2Mat_genos(simFamily)
# Calculate the GRM
simGRM <- Gmatrix(simGenosMat, method='Yang', ploidy=2)
### COMPARE THE OBSERVED AND SIMULATED
relComp <- family_sim_compare(
simFamily=simFamily,
simGRM=simGRM,
obsGRM=obsGRM
)
# The data
relComp$data
# Plot of relatedness values
relComp$plot
relComp$data
relComp$data[SAMPLE1=='Child_1.2_1']
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2')]
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
relComp$data
relComp$data[FAMILY=='Siblings']
relComp$data[FAMILY=='Siblings']$RELATE %>% summary()
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
parentList <- list(c('Ind1_1','Ind1_2'), c('Ind1_29','Ind1_30'))
genosSibs <- lapply(1:2, function(i){
parents <- parentList[[i]]
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
genosSibs
relComp$data[FAMILY=='Half-siblings']$RELATE %>% summary()
relComp$data[FAMILY=='Siblings']$RELATE %>% summary()
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
relComp$data[FAMILY=='Half-siblings']$RELATE %>% summary()
relComp$data[FAMILY=='Siblings']$RELATE %>% summary()
simFamily <- family_sim_data(
freqData=freqsPop1,
locusCol='LOCUS',
freqCol='FREQ',
numSims=100
)
parentList <- list(c('Ind1_1','Ind1_2'), c('Ind1_29','Ind1_30'))
genosSibs <- lapply(1:2, function(i){
parents <- parentList[[i]]
child <- paste(sub('Ind1_', '', parents), collapse='.')
gamete1 <- genosPop1[SAMPLE == parents[1]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
gamete2 <- genosPop1[SAMPLE == parents[2]] %>%
.[, .(GAMETE=rbinom(n=2,size=1,prob=GT/2)), by=c('SAMPLE','LOCUS')] %>%
.[, SIB:=1:2, by=LOCUS]
rbind(gamete1, gamete2) %>%
.[, .(GT=sum(GAMETE)), by=c('LOCUS','SIB')] %>%
.[, SAMPLE:=paste0('Child_',child,'_',SIB)] %>% print
}) %>%
do.call('rbind', .)
### THE OBSERVED GENETIC RELATIONSHIPS MATRIX
library(AGHmatrix)
# Combine the population samples and the created siblings
# into a single genotype matrix
obsGenosMat <- rbind(genosPop1, genosSibs[, c('SAMPLE','LOCUS','GT')]) %>%
DT2Mat_genos()
# Calculate the GRM
obsGRM <- Gmatrix(obsGenosMat, method='Yang', ploidy=2)
### THE SIMULATED GENETIC RELATIONSHIPS MATRIX
# Convert simulated families into a genotype matrix
simGenosMat <- DT2Mat_genos(simFamily)
# Calculate the GRM
simGRM <- Gmatrix(simGenosMat, method='Yang', ploidy=2)
### COMPARE THE OBSERVED AND SIMULATED
relComp <- family_sim_compare(
simFamily=simFamily,
simGRM=simGRM,
obsGRM=obsGRM
)
# The data
relComp$data
# Plot of relatedness values
relComp$plot
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_1.2_1' & SAMPLE2%in%c('Child_1.2_2','Ind1_1','Ind1_2')]
relComp$data[SAMPLE1=='Child_29.30_1' & SAMPLE2%in%c('Child_29.30_2','Ind1_29','Ind1_30')]
relComp$data[FAMILY=='Half-siblings']$RELATE %>% summary()
relComp$data[FAMILY=='Siblings']$RELATE %>% summary()
