% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poolne_estim_boot_pi.R
\name{poolne_estim_boot_pi}
\alias{poolne_estim_boot_pi}
\title{Parametric bootstrap of \code{poolne_estim} allele frequencies}
\usage{
poolne_estim_boot_pi(dat, num.sims = 100)
}
\arguments{
\item{dat}{Data table: the \code{poolne_estim} data. For example, the
output from \code{genomalicious::poolne_estim_output()}. Requires 4 columns: \cr
\enumerate{
   \item \code{$POOL}, the population pool ID. \cr
   \item \code{$LOCUS}, the locus ID. \cr
   \item \code{$PI}, the estimated population frequency for the Ref allele. \cr
   \item \code{$SD}, the standard deviation for PI.
}}

\item{num.sims}{Numeric, the number of simulations to generate. Default = \code{100}.}
}
\value{
A data table, with the following columns:
\enumerate{
   \item \code{$POOL}, the population pool ID. \cr
   \item \code{$LOCUS}, the locus ID. \cr
   \item \code{$SIM.NUM}, the simulation number. \cr
   \item \code{$SIM.PI}, the simulated pi (Ref allele frequency).
}
}
\description{
Takes the results of \code{poolne_estim} (Gautier et al. 2013) and
performs a parametric bootstrap of Ref allele frequencies based on their
pi (estimated Ref allele frequency) and sd (the standard deviation).
}
\details{
The values of \code{PI} and \code{SD} in \code{dat} are used to generate
the alpha and beta paramters of a beta distribution, where: \cr
\cr
\code{alpha = ((1 - Mu) / Var - 1 / Mu) * Mu ^ 2} \cr
\code{beta = alpha * (1 / Mu - 1)} \cr
\cr
Here, values of \code{dat$PI} take on the values of \code{Mu} (the mean) and
\code{(dat$SD)^2} take on the values of \code{Var} (the variance). \cr
\cr
From the resulting beta distribution, \code{num.sims} values are drawn to create
a distribution of possible allele frequencies (for each locus) that might exist in the sampled
populations (given the associated mean and error estimated by \code{poolne_estim}).
}
\examples{
# Create a link to raw external datasets in genomalicious
genomaliciousExtData <- paste0(find.package('genomalicious'), '/extdata')

# Get the poolne estimat pi estimates
pi.data <- poolne_estim_output(stat='pi', datDir=genomaliciousExtData, lociDir=genomaliciousExtData)

# Simulate potential distributions
pi.sims <- poolne_estim_sim_pi(pi.data, 100)
pi.sims

}
