% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DT2Mat_freqs.R
\name{DT2Mat_freqs}
\alias{DT2Mat_freqs}
\title{Convert a data table of allele frequencies into a matrix (or vice versa)}
\usage{
DT2Mat_freqs(
  dat,
  popCol = "POP",
  locusCol = "LOCUS",
  freqCol = "FREQ",
  flip = FALSE
)
}
\arguments{
\item{dat}{Data table or Matrix: The object to transform. If this is a long data table
of allele frequencies, then three columns are required:
\enumerate{
   \item The population ID (see param \code{popCol}).
   \item The locus ID (see param \code{locusCol}).
   \item The Ref allele frequency (see param \code{freqCol}).
}
The population pool column serves as the pivot point to convert the long data table into a wide matrix.
If converting from a frequency matrix to a data table, see argument \code{flip}.}

\item{popCol}{Character: The column name with the population information. Default is 'POP'.}

\item{locusCol}{Character: The column name with the locus information. Default is 'LOCUS'.}

\item{freqCol}{Character: The column name with the Ref allele frequency. Default is 'FREQ'.}

\item{flip}{Logical: Instead of converting a (long) data table to a (wide) matrix,
should a (wide) matrix be converted into a (long) data table? Default = \code{FALSE}.
If \code{TRUE}, then param \code{dat} must be a matrix, with loci names as column headers,
population IDs in the row names, and frequencies in the cells. When \code{TRUE}, params
\code{popCol}, \code{locusCol}, and \code{freqCol} become void.}
}
\value{
When \code{flip=FALSE}, converts a data table into a frequency matrix. When
\code{flip=TRUE}, converts a matrix into a data table with three columns: (1) \code{$POP},
the population ID (as for pool-seq data); (2) \code{$LOCUS}, the locus ID; and (3) \code{FREQ},
the Ref allele frequency.
}
\description{
Takes a data table of allele frequencies in long format and converts it into
a matrix in wide format (loci in columns and populations in rows). The reverse
can also be done. See also \code{DT2Mat_genos} for converting matrix of genotypes.
}
\examples{
data(data_PoolFreqs)

# Convert a long data table to a wide matrix
freqMat <- DT2Mat_freqs(
   dat=data_PoolFreqs,
   popCol='POOL',
   locusCol='LOCUS',
   freqCol='FREQ',
   flip=FALSE)

freqMat

# Convert a wide matrix back to a data table
freqDT <- DT2Mat_freqs(
   freqMat,
   popCol='POOL',
   locusCol='LOCUS',
   freqCol='FREQ',
   flip=TRUE)

freqDT

}
