% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fstat_calc.R
\name{fstat_calc}
\alias{fstat_calc}
\title{Calculate F-statistics from genotypes or allele frequencies}
\usage{
fstat_calc(
  dat,
  type,
  fstat = NULL,
  global = TRUE,
  pairwise = FALSE,
  permute = FALSE,
  numPerms = 100,
  numCores = 1
)
}
\arguments{
\item{dat}{Data table: A long-format data table of biallelic genotypes,
coded as '/' separated alleles ('0/0', '0/1', '1/1'), or counts
of the Alt alleles (0, 1, 2, respectively). Alternatively, a long-format
data table of allele frequencies.
Columns required for \strong{both} genotypes and allele frequencies:
\enumerate{
   \item \code{$POP}, the population ID.
   \item \code{$LOCUS}, the locus ID.
}
Columns required only for \strong{genotypes}:
\enumerate{
   \item \code{$SAMPLE}, the sample ID (a diploid individual).
   \item \code{$GT}, the genotypes.
}
Columns required only for \strong{allele frequencies}:
\enumerate{
   \item \code{$FREQ}, the allele frequencies.
   \item \code{$INDS}, the number of pooled diploid individuals used to
   obtain the allele frequency estimate.
}}

\item{type}{Character: One of \code{'genos'} or \code{'freqs'}, to calculate
F-statistics from genotype or allele frequency data, respectively.}

\item{fstat}{Character: A vector of F-statistics to calculate. This is only
applicable for genotype data. Must include one of \code{"FST"},
\code{"FIS"}, or \code{"FIT"}.}

\item{global}{Logical: Calculate global F-statistics across all populations?
Default is \code{TRUE}. Note, \code{global==TRUE} and \code{pairwise==TRUE}
is not permitted.}

\item{pairwise}{Logical: Calculate pairwise FST between populations?
Default is \code{FALSE}. Note, \code{global==TRUE} and \code{pairwise==TRUE}
is not permitted.}

\item{permute}{Logical: Should permutations be performed to test the
statistical significance of F-statistics? Default is \code{FALSE}.
Can only be performed on genotype data, i.e., \code{type=='genos'}.}

\item{numPerms}{Integer: The number of permutations to perform. Default is 100.}
}
\value{
A list is returned with three indexes.

The first index is \code{$genome}, the genome-wide F-statistics. If global
estimates were requested, \code{global==TRUE}, then this is just a single row;
the estimates across all populations. If pairwise esimates were requested,
\code{pairwise==TRUE}, then there are \code{$POP1} and \code{$POP2}, which
represent two populations tested.

The second index is \code{$locus}, the locus-specific F-statistics. This is
a data table with a \code{$LOCUS} column for global estimates at each locus.
when \code{global==TRUE}. If pairwise population estimates have been requested,
\code{pairwise==TRUE}, then there are \code{$POP1} and \code{$POP2}, which
represent the two populations tested.

The third index is \code{$permute}, the permutation results. This index will
be \code{NULL} when frequencies are used, i.e., \code{type=='freqs'}, and
will only contain data if \code{type=='genos'} and \code{permute==TRUE}.
\code{$permute} is itself a list, with two subindexes:
\enumerate{
   \item \code{$fstat}: The permuted F-statistics. If \code{global==TRUE}, then
   this will simply be a single row of global estimates. If \code{pairwise==TRUE},
   then this will be a data table with columns \code{$POP1}, \code{$POP2}, and
   a column for each F-statistic.

   \item \code{$pval}: The permuted p-values. This is a long-format data table.
   If \code{global==TRUE}, then there are two column: \code{$STAT}, which
   contains the F-statistic; and \code{$PVAL}, which contains the global
   permuted p-value. If \code{pairwise==TRUE}, then there will two additional
   columns, \code{$POP1} and \code{$POP2}.
}
}
\description{
Function takes a genotypes or allele frequencies in a long-format data table
and calculates Weir & Cockerham's F-statistics (Weir & Cockerham, 1984).
Permutations can be used to test statistical significance of FST in
genotype data sets. See Details for more information.
}
\details{
With genotype data, the F-statistics FST, FIS, and FIT can be calculated.
Only FST can be calculated from allele frequency data.

F-statistics from genotype data are calculated from the variance components
'a', 'b', and 'c', which have been standardised for observed heterozygosity.
FST from allele frequencies are calculated using estimates of MSP
(mean squares for populations), MSG (mean squares for gametes) and
nc (the weighted mean sample size).

Permutation tests involve random shuffling of individuals
among populations, recalculating F-statistics, and testing the hypothesis
that the permuted F-statistic > observed F-statistic. The p-value represents the
proportion of permutation that were TRUE to this expression. That is,
if no permuted values are greater than the observed, p=0. Likewise, if all
the permuted values are greater than the observed, p=1.
}
\examples{
library(genomalicious)

data(data_Genos)
data(data_PoolFreqs)
data(data_PoolInfo)

### Genotypes, global estimates for FST, FIS and FIT, with 50 permutations
genoGlobal <- fstat_calc(
   data_Genos,
   type='genos',
   fstat=c('FST','FIS','FIT'),
   global=TRUE,
   permute=TRUE,
   numPerms=50)

# Genome-wide estimate
genoGlobal$genome

# Locus specific estimates
genoGlobal$locus \%>\% head

# Permutations
genoGlobal$permute$fstat
genoGlobal$permute$pval

### Genotypes, pairwise estimates for FST, FIS and FIT, no permutations
genoPairs <- fstat_calc(
   data_Genos,
   type='genos',
   fstat=c('FST','FIS','FIT'),
   global=FALSE,
   pairwise=TRUE
   )

# Genome-wide estimates
genoPairs$genome \%>\% head

# Locus specific estimates
genoPairs$locus \%>\% head

# Permutations (there are none!)
genoPairs$permute

### Genotypes, pairwise, FST only, with 10 permutations
genoPairsPerms <- fstat_calc(
   data_Genos,
   type='genos',
   fstat='FST',
   global=FALSE,
   pairwise=TRUE,
   permute=TRUE,
   numPerms=10
   )

# Permuted FST
genoPairsPerms$permute$fstat \%>\% head

# Permuted p-value
genoPairsPerms$permute$pval \%>\% head

### Frequencies, pairwise (can only do FST)
# Note columns in data_PoolFreqs
colnames(data_PoolFreqs)

# We need to add in the number of diploid individuals, $INDS
newFreqData <- left_join(data_PoolFreqs, data_PoolInfo)
head(newFreqData)

# There is no $POP column, but there is a $POOL column that contains
# the population pool ID. Need to manually specify this.
freqPairs <- fstat_calc(
   newFreqData,
   type='freqs',
   global=FALSE,
   pairwise=TRUE
)

freqPairs

}
\references{
Weir & Cockerham (1984) Evolution. DOI: 10.1111/j.1558-5646.1984.tb05657.x
Weir et al. (2002) Annals of Human Genetics. DOI: 10.1146/annurev.genet.36
}
