% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poolfstat_DT.R
\name{poolfstat_DT}
\alias{poolfstat_DT}
\title{Calculate FST with \code{poolfstat} from a data table of read counts}
\usage{
poolfstat_DT(dat, pool.info, method = "Anova", snp.index = NA)
}
\arguments{
\item{dat}{Data table: Contains read counts, e.g. like that been
produced by the function \code{vcf2DT}. Must contain all the following columns:
\enumerate{
   \item \code{$CHROM} The chromosome (contig) ID.
   \item \code{$POS} The variant position on the chromosome.
   \item \code{$REF} The reference allele.
   \item \code{$ALT} The alternate allele.
   \item \code{$LOCUS} The locus ID.
   \item \code{$POOL} The pool ID.
   \item \code{$DP} The total depth of reads supporting the variant.
   \item \code{$RO} The number of reads supporting the reference allele.
}}

\item{pool.info}{Data table: Contains the sample sample sizes (number of diploids) for
for each unique pool listed in \code{dat$POOL}. Requires two columns:
\enumerate{
   \item \code{$POOL} The pools listed in \code{dat$POOL}.
   \item \code{$INDS} The number of diploid individuals for the pools.
}}

\item{method}{Character: Either 'Anova' (default) or 'Identity'. Passed to \code{method} argument
in \code{poolfstat::computeFST}.}

\item{snp.index}{List: A list of SNPs to consider. Default = \code{NA}.
Passed to \code{snp.index} argument in \code{poolfstat::computeFST}.}
}
\value{
Returns a list with two indices: \code{$Fst} is the calculated FST among the
pools using a function call of \code{poolfstat::computeFST}, whereas \code{$pooldat} is the
\code{poolfstat} object used to generate said FST values.
}
\description{
Takes a data table of read counts and creates an object of class
\code{poolfstat}. The FST for the pools in the data table is calculated using
the function \code{poolfstat::computeFST}. Also requires pool size information.
}
\examples{
# Load in the pool metadata and reads
data(genomalicious_PoolInfo)
data(genomalicious_PoolReads)

# Subset to keep only Rep1 reads.
X <- genomalicious_PoolReads[grep(pattern='Rep1', x=genomalicious_PoolReads$SAMPLE)]

# Need to add pool ID.
X$POOL <- unlist(lapply(strsplit(X$SAMPLE, '_'), function(X){ return(X[1]) }))

# Calculate FST using poolfstat
Y <- poolfstat_DT(X, genomalicious_PoolInfo)

# Output is a list
class(Y)

# Outout from poolfstat::computeFST
Y$Fst

# The pooldata class object, generated from data table of pooled reads
class(Y$pooldat)
Y$pooldat

}
