% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_scatter.R
\name{pca_scatter}
\alias{pca_scatter}
\title{Create a scatter plot of a PCA on genotypes}
\usage{
pca_scatter(dat, axisIndex = c(1, 2), pops = NULL, popCols = NULL,
  look = "ggplot", ...)
}
\arguments{
\item{dat}{Prcomp/Data table/Data frame/Matrix: Contains the PCA scores for
each individual. If not using a \code{prcomp} object, the tabular data must
be wide-format: rows are indivdiuals, columns are PC axes. See also
\code{pca_DTinds()} to perform PCA on SNP genotypes.}

\item{axisIndex}{Integer: Vector of lenght = 2. Corresponds to the column
index to plots, i.e. the PC axes. Default = \code{c(1,2)}, the first and second
PC axis column tabulated in \code{dat}.}

\item{pops}{Character: A vector of population ID, should match the
rows in \code{dat}, but is an optional argument. Default = \code{NULL}.
If \code{dat} is a \code{prcomp} object, function will search for \code{dat$pops}
to assign to this argument.}

\item{popCols}{Character: A vector of colours to use for each unique population
in \code{pops}, but is an optional argument. Default = \code{NULL}.
The name of each colour must correspond to a population in \code{pops}.}

\item{look}{Character: The look of the plot. Default = \code{'ggplot'}, the
typical gray background with gridlines produced by \code{ggplot2}. Alternatively,
when set to \code{'classic'}, produces a base R style plot.}
}
\value{
Produces the PCA scatter plot, and also returns a
\code{gg}/\code{ggplot} object.
}
\description{
Plots the results of a PCA. Can accept an object of class \code{prcomp},
but can also take wide-format tabular data. Points can be coloured by
population.
}
\examples{
# Data
data(genomalicious4pops)

# Conduct the PCA with Patterson et al.'s (2006) normalisation, and
# population specified
pca <- pca_DTinds(dat=genomalicious4pops, scaling='patterson', popCol='POP')

# Plot the PCA
pca_scatter(pca)

# Get more specific
pca_scatter(pca
            , axisIndex=c(2,3)
            , pops=pca$pops
            , popCols=c(Pop1='gray30', Pop2='royalblue', Pop3='palevioletred3', Pop4='plum2')
            , look='classic')
}
