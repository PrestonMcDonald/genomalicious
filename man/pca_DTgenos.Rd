% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_DTgenos.R
\name{pca_DTgenos}
\alias{pca_DTgenos}
\title{Conduct a PCA on individual genotypes stored in a (long) data table}
\usage{
pca_DTgenos(
  dat,
  scaling = "covar",
  sampCol = "SAMPLE",
  locusCol = "LOCUS",
  genoCol = "GT",
  popCol = NULL
)
}
\arguments{
\item{dat}{Data table: A long data table, e.g. like that imported from
\code{vcf2DT}. Genotypes can be coded as '/' separated characters
(e.g. '0/0', '0/1', '1/1'), or integers as Alt allele counts (e.g. 0, 1, 2).
Must contain the following columns,
\enumerate{
  \item The sampled individuals (see param \code{sampCol}).
  \item The locus ID (see param \code{locusCol}).
  \item The genotype column (see param \code{genoCol}).
}}

\item{scaling}{Character: How should the data (loci) be scaled?
Set to \code{'covar'} to scale to mean = 0, but variance is not
adjusted, i.e. PCA on a covariance matrix. Set to \code{'corr'}
to scale to mean = 0 and variance = 1, i.e. PCA on a
correlation matrix. Set to \code{'patterson'} to use the
Patteron et al. (2006) normalisation. Set to \code{'none'} to
if you do not want to do any scaling before PCA.}

\item{sampCol}{Character: The column name with the sampled individual information.
Default is \code{'SAMPLE'}.}

\item{locusCol}{Character: The column name with the locus information.
Default is \code{'LOCUS'}.}

\item{genoCol}{Character: The column name with the genotype information.
Default is \code{'GT'}.}

\item{popCol}{Character: An optional argument. The column name with the
population information. Default is \code{NULL}. If specified, population
membership is stored in the returned object.}
}
\value{
Returns a \code{prcomp} object. If argumet \code{popCols} was specified,
and additional index of \code{$pops} is also also present.
}
\description{
Takes a long data table of genotypes and conducts a PCA using R's
\code{prcomp()} function. Different options for scaling the genotypes
pre-PCA are available.
}
\examples{
# Data
data(genomalicious_4pops)
datGt <- genomalicious_4pops

# Conduct the PCA with Patterson et al.'s (2006) normalisation, and
# population specified
pca <- pca_DTgenos(dat=datGt, scaling='patterson', popCol='POP')

# Plot the PCA
pca_plot(pca)

}
\references{
Patterson et al. (2006) Population structure and eigenanalysis. PLOS Genetics.
}
