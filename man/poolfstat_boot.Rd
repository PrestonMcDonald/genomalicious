% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poolfstat_boot.R
\name{poolfstat_boot}
\alias{poolfstat_boot}
\title{Bootstrap FST values from \code{poolfstat}}
\usage{
poolfstat_boot(dat, num.boots = 100, method = "Anova", snp.index = NA)
}
\arguments{
\item{dat}{Pooldata: The main data class object for \code{poolfstat}. Can be created
from a data table of read counts using \code{genomalicious::poolfstat_DT}.}

\item{num.boots}{Integer: The number of bootstrap simulations to run. Default = 100.}

\item{method}{Character: Either 'Anova' (default) or 'Identity'. Passed to \code{method} argument
in \code{poolfstat::computeFST()}.}

\item{snp.index}{List: A list of SNPs to consider. Default = \code{NA}.
Passed to \code{snp.index} argument in \code{poolfstat::computeFST()}.}
}
\value{
Returns a vector of FST values produced by bootstrapping loci in the
original read count dataset, \code{dat}.
}
\description{
Takes a data table of read counts and bootstraps the estimate of FST
calcualted from the function \code{poolfstat::computeFST}. Also requires
pool size information.
}
\examples{
# Load in the pool metadata and reads
data(data_PoolInfo)
data(data_PoolReads)

# Subset to keep only Rep1 reads.
X <- data_PoolReads[grep(pattern='Rep1', x=data_PoolReads$SAMPLE)]

# Need to add pool ID.
X$POOL <- unlist(lapply(strsplit(X$SAMPLE, '_'), function(X){ return(X[1]) }))

# Use poolfstat_DT to compute FST for this dataset and create a pooldata object
Y <- poolfstat_DT(X, data_PoolInfo)

# Bootstrap FST, using pooldata object from poolFst
Yboot <- poolfstat_boot(Y$pooldat, 100)
Yboot
quantile(Yboot, c(0.025, 0.975))

}
