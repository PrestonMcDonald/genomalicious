% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circularity_test.R
\name{circularity_test}
\alias{circularity_test}
\title{Test the circularity of a genetic sequence}
\usage{
circularity_test(
  query_seq,
  word_size = 20,
  search_start = 1,
  step_size = 1,
  wiggle = 2
)
}
\arguments{
\item{query_seq}{Character: The query sequence.}

\item{word_size}{Integer: The size of the words to search for. Default = 20.}

\item{search_start}{Integer: The starting base position. Default = 1.}

\item{step_size}{Integer: The sliding window step size. Default = 1.}

\item{wiggle}{Integer: The "wiggle room" for the word size in case the
sliding window over-shoots the end of the sequence. Default = 2.}
}
\value{
If the function finds a replicated character string, it will return
a data.table with the columns:
\enumerate{
   \item \code{$STEP}: Integer, the step number in the sliding window.
   \item \code{$WORD}: Character, the character string.
   \item \code{$START}: Integer, the start position.
   \item \code{$END}: Integer, the end position.
   \item \code{$SIZE}: Integer, the word size.
}
}
\description{
A rough function to assess the circularity of a genetic sequence, for example,
an assembly of a bacterial chromosome or a eukaryotic organelle genome.
}
\details{
A sliding window is used to assess for the presence of a replicated
character string in the query sequence. This replicated pattern is used to
infer the circular start and end points.

The function \code{circle_cutter} can then be used to excise the single
non-replicated linear sequence.
}
\examples{
x <- 'AATTGGCCACTATCTGCTAGCTAGCATAGCATCGATCAGCATGACGCGCAAAATTGGCC'

# Find character motif that is repeated
motif_hits <- circularity_test(x, word_size = 8)
motif_seq <- substr(x, motif_hits[1,1], motif_hits[1,2])

circle_cutter(query_seq = x, motif=motif_seq)

}
